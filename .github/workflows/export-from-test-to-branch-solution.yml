name: export-from-test-and-branch-solution
# Export solution from TEST environment, unpack it, and prepare, commit, and push a git branch with the changes

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to work on from Power Platform'
        required: true
        default: ALMLab
      solution_exported_folder:
        description: 'Folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'Staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
        description: 'Folder name to be created and checked in *do not change*'
        required: true
        default: solutions/
env:
  ENVIRONMENT_URL: 'https://org8a082745.crm4.dynamics.com/'
  CLIENT_ID: 'e99c7897-4e86-4cbd-b6d8-000463eff1b3'
  TENANT_ID: '31625609-2aab-48ed-859d-9e16ef89acea'
permissions:
  contents: write

jobs:
  export-from-dev:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Who am I
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}

    - name: Export solution as unmanaged
      id: export-solution
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        managed: false

    - name: Unpack solution
      id: unpack-solution
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        overwrite-files: true

    - name: Branch solution and prepare for PullRequest
      id: branch-solution
      uses: microsoft/powerplatform-actions/branch-solution@v0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
        branch-name: export-${{ github.event.inputs.solution_name }}-$(date +%Y%m%d%H%M%S)
